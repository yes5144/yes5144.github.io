(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{382:function(a,t,s){"use strict";s.r(t);var e=s(42),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"_2020-07-11"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2020-07-11"}},[a._v("#")]),a._v(" 2020-07-11")]),a._v(" "),s("p",[a._v("阿良 k8s--")]),a._v(" "),s("h2",{attrs:{id:"第一章：k8s特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一章：k8s特性"}},[a._v("#")]),a._v(" 第一章：k8s特性")]),a._v(" "),s("p",[a._v("自我修复\n弹性伸缩\n自动部署和回滚\n服务发现和负载均衡\n机密和配置管理\n存储编排\n批处理")]),a._v(" "),s("h3",{attrs:{id:"k8s集群-master"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#k8s集群-master"}},[a._v("#")]),a._v(" k8s集群 master")]),a._v(" "),s("p",[a._v("apiserver: 集群的统一入口，各组件协调者，以RESTful API提供接口服务，所有对象资源的增删改查和监听操作都交给APIServer处理后再提交给etcd存储\ncontroller-manager: 处理集群中常规后台任务，一个资源对应一个控制器，而controller-manager就是管理这些控制器的\nscheduler: 根据调度算法为新创建的Pod选择一个Node节点，可以任意部署，可以部署在同一个节点上，也可以部署在不同的节点上\netcd: 分布式键值存储系统，用于保存集群状态数据，比如Pod，service等对象信息")]),a._v(" "),s("h3",{attrs:{id:"k8s集群-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#k8s集群-node"}},[a._v("#")]),a._v(" k8s集群 node")]),a._v(" "),s("p",[a._v("kubelet: kubelet是master在node节点上的Agent，管理本机运行容器的生命周期，比如创建容器、Pod挂载数据卷、下载secret、获取容器和节点状态等工作。kubelet将每个Pod转换为一组容器。\nkube-proxy: 在node节点上实现Pod网络代理，维护网络规则和四层负载均衡工作\ndocker 或 rocket: 容器引擎，运行容器")]),a._v(" "),s("h3",{attrs:{id:"k8s核心概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#k8s核心概念"}},[a._v("#")]),a._v(" k8s核心概念")]),a._v(" "),s("p",[a._v("Pod: 最小部署单元，一组容器的集合，一个Pod中的容器共享网络命名空间，pod是短暂的\nController：\nReplicaSet: 确保预期的Pod副本数量\nDeployment: 无状态应用部署\nStatefulSet: 有状态应用部署\nDaemonSet: 确保所有Node运行同一个Pod\nJob: 一次性任务\nCronjob: 定时任务\n更高级层次对象，部署和管理Pod")]),a._v(" "),s("p",[a._v("Service: 防止Pod失联，定义一组Pod的访问策略\nLabel: 标签，附加到某个资源上，用于关联对象、查询和筛选\nNamespace: 命名空间，将对象逻辑上隔离")]),a._v(" "),s("h2",{attrs:{id:"第二章：搭建一个完整的k8s集群（二进制方式）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二章：搭建一个完整的k8s集群（二进制方式）"}},[a._v("#")]),a._v(" 第二章：搭建一个完整的k8s集群（二进制方式）")]),a._v(" "),s("h3",{attrs:{id:"_2-1-服务器节点规划"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-服务器节点规划"}},[a._v("#")]),a._v(" 2.1 服务器节点规划")]),a._v(" "),s("p",[a._v("192.168.204.201 k8s-master01"),s("br"),a._v("\n192.168.204.101 k8s-node01"),s("br"),a._v("\n192.168.204.102 k8s-node02")]),a._v(" "),s("p",[a._v("192.168.204.202 k8s-master02")]),a._v(" "),s("h3",{attrs:{id:"_2-2-系统初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-系统初始化"}},[a._v("#")]),a._v(" 2.2 系统初始化")]),a._v(" "),s("h4",{attrs:{id:"关闭防火墙"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关闭防火墙"}},[a._v("#")]),a._v(" 关闭防火墙")]),a._v(" "),s("p",[a._v("systemctl stop firewalld"),s("br"),a._v("\nsystemctl disable firewalld")]),a._v(" "),s("h4",{attrs:{id:"关闭selinux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关闭selinux"}},[a._v("#")]),a._v(" 关闭SELinux")]),a._v(" "),s("p",[a._v("setenforce 0"),s("br"),a._v("\nvim /etc/sysconfig/selinux")]),a._v(" "),s("h4",{attrs:{id:"关闭swap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关闭swap"}},[a._v("#")]),a._v(" 关闭swap")]),a._v(" "),s("p",[a._v("swapoff -a\nvim /etc/fstab")]),a._v(" "),s("h4",{attrs:{id:"添加hosts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加hosts"}},[a._v("#")]),a._v(" 添加hosts")]),a._v(" "),s("p",[a._v("192.168.204.201 k8s-master01"),s("br"),a._v("\n192.168.204.101 k8s-node01"),s("br"),a._v("\n192.168.204.102 k8s-node02")]),a._v(" "),s("p",[a._v("192.168.204.202 k8s-master02")]),a._v(" "),s("h4",{attrs:{id:"同步系统时间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步系统时间"}},[a._v("#")]),a._v(" 同步系统时间")]),a._v(" "),s("p",[a._v("ntpdate time.windows.com")]),a._v(" "),s("h3",{attrs:{id:"_2-3-ssl证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-ssl证书"}},[a._v("#")]),a._v(" 2.3 ssl证书")]),a._v(" "),s("p",[a._v("包含：初始化自己的ca签证机构、生成ca机构自己的证书密钥对，生成对应公司域名(或host)的证书和密钥对")]),a._v(" "),s("h4",{attrs:{id:"自签etcd-ssl证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自签etcd-ssl证书"}},[a._v("#")]),a._v(" 自签etcd ssl证书")]),a._v(" "),s("p",[a._v("1,etcd的ca签证机构"),s("br"),a._v("\n2,生成etcd需要的一套证书")]),a._v(" "),s("h4",{attrs:{id:"自签apiserver-ssl证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自签apiserver-ssl证书"}},[a._v("#")]),a._v(" 自签apiserver ssl证书")]),a._v(" "),s("p",[a._v("1,apiserver的签证机构\n2,apiserver的一套证书")]),a._v(" "),s("h3",{attrs:{id:"_2-4-etcd数据库集群部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-etcd数据库集群部署"}},[a._v("#")]),a._v(" 2.4 etcd数据库集群部署")]),a._v(" "),s("p",[a._v("etcd.conf")]),a._v(" "),s("p",[a._v("/usr/lib/systemd/system/etcd.service")]),a._v(" "),s("p",[a._v("systemctl daemon-reload\nsystemctl start etcd\nsystemctl enable etcd")]),a._v(" "),s("h4",{attrs:{id:"查看etcd集群状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看etcd集群状态"}},[a._v("#")]),a._v(" 查看etcd集群状态")]),a._v(" "),s("p",[a._v("/opt/apps/etcd/bin/etcdctl "),s("br"),a._v("\n--ca-file=/opt/apps/etcd/ssl/ca.pem "),s("br"),a._v("\n--key-file=/opt/apps/etcd/ssl/etcd-key.pem "),s("br"),a._v("\n--cert-file=/opt/apps/etcd/ssl/etcd.pem "),s("br"),a._v('\n--endpoints="https://192.168.204.201:2379,https://192.168.204.101:2379,https://192.168.204.102:2379" '),s("br"),a._v("\ncluster-health")]),a._v(" "),s("h3",{attrs:{id:"_2-5-单master集群：master节点部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-单master集群：master节点部署"}},[a._v("#")]),a._v(" 2.5 单master集群：master节点部署")]),a._v(" "),s("h4",{attrs:{id:"部署apiserver-controller-manager-scheduler"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署apiserver-controller-manager-scheduler"}},[a._v("#")]),a._v(" 部署apiserver, controller-manager, scheduler")]),a._v(" "),s("p",[a._v("cat /opt/apps/k8s/cfg/token.csv  ## 格式：token,username,uid,usergroup")]),a._v(" "),s("h4",{attrs:{id:"给kubelet-bootstrap授权"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#给kubelet-bootstrap授权"}},[a._v("#")]),a._v(" 给kubelet-bootstrap授权")]),a._v(" "),s("p",[a._v("kubectl create clusterrolebindingkubelet-bootstrap "),s("br"),a._v("\n--clusterrole=system:node-bootstrapper "),s("br"),a._v("\n--user=kubelet-bootstrap")]),a._v(" "),s("h3",{attrs:{id:"_2-6-单master集群：node节点部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-单master集群：node节点部署"}},[a._v("#")]),a._v(" 2.6 单master集群：node节点部署")]),a._v(" "),s("h4",{attrs:{id:"部署docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署docker"}},[a._v("#")]),a._v(" 部署docker")]),a._v(" "),s("h4",{attrs:{id:"部署kubelet-kube-proxy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署kubelet-kube-proxy"}},[a._v("#")]),a._v(" 部署kubelet, kube-proxy")]),a._v(" "),s("p",[a._v("kubelet.conf 基本配置文件"),s("br"),a._v("\nkubeconfig 连接apiserver的配置文件"),s("br"),a._v("\nyml 主要配置文件，动态更新bate")]),a._v(" "),s("p",[a._v("所需证书ca.pem kube-proxy-key.pem kube-proxy.pem")]),a._v(" "),s("h4",{attrs:{id:"在master节点-给node颁发证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在master节点-给node颁发证书"}},[a._v("#")]),a._v(" 在master节点 给node颁发证书")]),a._v(" "),s("p",[a._v("kubectl get csr ## certificatesigningrequests (aka 'csr') http://docs.kubernetes.org.cn/626.html\nkubectl certificate approve node-csr-xxxxxxxxx")]),a._v(" "),s("p",[a._v("kubectl get node ## not ready 你需要 cni")]),a._v(" "),s("h4",{attrs:{id:"node部署cni网络-对接第三方网络接口，kubelet使用，只在node部署即可"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node部署cni网络-对接第三方网络接口，kubelet使用，只在node部署即可"}},[a._v("#")]),a._v(" node部署CNI网络(对接第三方网络接口，kubelet使用，只在node部署即可)")]),a._v(" "),s("p",[a._v("mkdir -p /opt/apps/cni/bin/  /etc/cni/net.d"),s("br"),a._v("\ntar xf cni-plugins-linux-xxx.tgz -C /opt/cni/bin")]),a._v(" "),s("h4",{attrs:{id:"master部署flannel网络"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#master部署flannel网络"}},[a._v("#")]),a._v(" master部署flannel网络")]),a._v(" "),s("p",[a._v("kubectl create -f flannel.xxx.yml"),s("br"),a._v("\nkubectl get pods -n kube-system")]),a._v(" "),s("p",[a._v("kubectl describe pod kube-flannelxxx -n kube-system"),s("br"),a._v("\nkubectl logs kube-flannelxxx -n kube-system # 授权后才有权限，k8s有多少用户角色")]),a._v(" "),s("p",[a._v("kubectl get node")]),a._v(" "),s("h4",{attrs:{id:"授权apiserver访问kubelet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#授权apiserver访问kubelet"}},[a._v("#")]),a._v(" 授权apiserver访问kubelet")]),a._v(" "),s("p",[a._v("kubectl apply -f apiserver-to-kubelet-rbac.yml")]),a._v(" "),s("h4",{attrs:{id:"创建nginx的web应用测试集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建nginx的web应用测试集群"}},[a._v("#")]),a._v(" 创建nginx的web应用测试集群")]),a._v(" "),s("p",[a._v("kubectl create deployment web --image=nginx")]),a._v(" "),s("p",[a._v("kubectl get pods"),s("br"),a._v("\nkubectl get pods -o wide")]),a._v(" "),s("p",[a._v("kubectl expose deployment web --port=80 --type=NodePort"),s("br"),a._v("\nkubectl get pods,svc"),s("br"),a._v("\nhttp://node:ip")]),a._v(" "),s("h3",{attrs:{id:"_2-7-部署web-ui-dashboard"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-部署web-ui-dashboard"}},[a._v("#")]),a._v(" 2.7 部署Web UI(Dashboard)")]),a._v(" "),s("p",[a._v("kubectl apply -f dashboard.yaml"),s("br"),a._v("\nkubectl get pods -n kubernetes-dashboard"),s("br"),a._v("\nkubectl get pods,svc -n kubernetes-dashboard")]),a._v(" "),s("h4",{attrs:{id:"授权"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#授权"}},[a._v("#")]),a._v(" 授权")]),a._v(" "),s("p",[a._v("kubectl apply -f dashboard-adminuser.yaml")]),a._v(" "),s("h4",{attrs:{id:"获取token"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取token"}},[a._v("#")]),a._v(" 获取token")]),a._v(" "),s("p",[a._v("kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubenetes-dashboard get  secret|grep admin-user|awk '{print $1}')")]),a._v(" "),s("h3",{attrs:{id:"_2-8-部署k8s内部dns服务-coredns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-部署k8s内部dns服务-coredns"}},[a._v("#")]),a._v(" 2.8 部署k8s内部DNS服务(coreDNS)")]),a._v(" "),s("p",[a._v("kubectl apply -f coreDNS.yaml  ## 其中的 ip地址与 /opt/apps/k8s/cfg/kubelet-config.yml 相对应")]),a._v(" "),s("h4",{attrs:{id:"测试dns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试dns"}},[a._v("#")]),a._v(" 测试dns")]),a._v(" "),s("p",[a._v("kubectl apply -f busybox.yaml"),s("br"),a._v("\nkubectl get pods"),s("br"),a._v("\nkubectl exec -it busybox bash"),s("br"),a._v("\nnslookup kubenetes"),s("br"),a._v("\nping kubenetes")]),a._v(" "),s("h3",{attrs:{id:"_2-9-k8s高可用-多master"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-9-k8s高可用-多master"}},[a._v("#")]),a._v(" 2.9 k8s高可用(多master)")]),a._v(" "),s("p",[a._v("apiserver controller-manager scheduler"),s("br"),a._v("\n证书(etcd,k8s)")]),a._v(" "),s("h3",{attrs:{id:"_2-10-k8s高可用-负载均衡nginx-keepalived"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-10-k8s高可用-负载均衡nginx-keepalived"}},[a._v("#")]),a._v(" 2.10 k8s高可用(负载均衡nginx + keepalived)")]),a._v(" "),s("h4",{attrs:{id:"nginx-keepalived"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-keepalived"}},[a._v("#")]),a._v(" nginx + keepalived")]),a._v(" "),s("p",[a._v("yum install nginx keepalived")]),a._v(" "),s("p",[a._v("chech_nginx.sh"),s("br"),a._v("\nip addr")]),a._v(" "),s("h4",{attrs:{id:"node替换kubelet-kube-proxy中的apiserver-ip-为新的的-vip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node替换kubelet-kube-proxy中的apiserver-ip-为新的的-vip"}},[a._v("#")]),a._v(" node替换kubelet kube-proxy中的apiserver ip 为新的的 VIP")]),a._v(" "),s("p",[a._v("grep oldip /opt/apps/k8s/cfg/*"),s("br"),a._v("\nsed 's#oldip#vip#g'  *"),s("br"),a._v("\nsystemctl restart kubelet"),s("br"),a._v("\nsystemctl restart kube-proxy")]),a._v(" "),s("p",[a._v('curl -k --header "Authorization: Bearer '),s("code",[a._v("awk '{print $1}' /opt/apps/k8s/cfg/token.csv")]),a._v('" https://vip:6443/version')]),a._v(" "),s("h2",{attrs:{id:"第三章：kubectl命令行管理工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三章：kubectl命令行管理工具"}},[a._v("#")]),a._v(" 第三章：kubectl命令行管理工具")]),a._v(" "),s("h3",{attrs:{id:"_3-1-kubectl-管理命令概要"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-kubectl-管理命令概要"}},[a._v("#")]),a._v(" 3.1 kubectl 管理命令概要")]),a._v(" "),s("p",[a._v("kubectl --help"),s("br"),a._v("\nkubectl set --help")]),a._v(" "),s("p",[a._v("kubectl explain"),s("br"),a._v("\nkubectl describe"),s("br"),a._v("\nkubectl logs")]),a._v(" "),s("h3",{attrs:{id:"_3-2-kubectl-管理应用程序生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-kubectl-管理应用程序生命周期"}},[a._v("#")]),a._v(" 3.2 kubectl 管理应用程序生命周期")]),a._v(" "),s("h4",{attrs:{id:"创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建"}},[a._v("#")]),a._v(" 创建")]),a._v(" "),s("p",[a._v("kubectl run nginx --replicas=3 --image=nginx:1.14 --port=80"),s("br"),a._v("\nkubectl get deploy,pods")]),a._v(" "),s("h4",{attrs:{id:"发布"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#发布"}},[a._v("#")]),a._v(" 发布")]),a._v(" "),s("p",[a._v("kubectl expose deployment nginx --port=80 --type=NodePort --target-port --name=nginx-service"),s("br"),a._v("\nkubectl get service")]),a._v(" "),s("h4",{attrs:{id:"更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新"}},[a._v("#")]),a._v(" 更新")]),a._v(" "),s("p",[a._v("kubectl set image deployment/nginx nginx=nginx:1.15")]),a._v(" "),s("h4",{attrs:{id:"回滚"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回滚"}},[a._v("#")]),a._v(" 回滚")]),a._v(" "),s("p",[a._v("kubectl rollout history deployment/nginx"),s("br"),a._v("\nkubectl rollout undo deployment/nginx")]),a._v(" "),s("h4",{attrs:{id:"删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[a._v("#")]),a._v(" 删除")]),a._v(" "),s("p",[a._v("kubectl delete deploy/nginx"),s("br"),a._v("\nkubectl delete svc/nginx-service")]),a._v(" "),s("h3",{attrs:{id:"_3-3-kubectl-工具远程连接k8s集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-kubectl-工具远程连接k8s集群"}},[a._v("#")]),a._v(" 3.3 kubectl 工具远程连接k8s集群")]),a._v(" "),s("p",[a._v("apiserver默认监听127.0.0.1:8080"),s("br"),a._v("\n根据ca和admin证书生成对应的config，可以存在~/.kube/ 目录下")]),a._v(" "),s("h2",{attrs:{id:"第四章：资源编排-yaml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第四章：资源编排-yaml"}},[a._v("#")]),a._v(" 第四章：资源编排(yaml)")]),a._v(" "),s("h3",{attrs:{id:"_4-1-yaml文件格式说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-yaml文件格式说明"}},[a._v("#")]),a._v(" 4.1 yaml文件格式说明")]),a._v(" "),s("p",[a._v("缩进表示层级关系"),s("br"),a._v("\n使用空格缩进，不支持tab"),s("br"),a._v("\n通常开头缩进2个空格"),s("br"),a._v("\n字符后缩进1个空格，如冒号、逗号等"),s("br"),a._v('\n"---" 表示yaml格式，一个文件的开始'),s("br"),a._v('\n"#" 注释')]),a._v(" "),s("h3",{attrs:{id:"_4-2-yaml文件创建资源对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-yaml文件创建资源对象"}},[a._v("#")]),a._v(" 4.2 yaml文件创建资源对象")]),a._v(" "),s("h3",{attrs:{id:"_4-3-yaml快速生成一个模板"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-yaml快速生成一个模板"}},[a._v("#")]),a._v(" 4.3 yaml快速生成一个模板")]),a._v(" "),s("p",[a._v("kubectl create deployment nginx --image=nginx:1.14 -o yaml --dry-run> mynginx-deploy.yaml")]),a._v(" "),s("p",[a._v("kubectl get my-deploy/nginx -o=yaml --export > my-deploy.yaml")]),a._v(" "),s("p",[a._v("kubectl explain pods.spec.containers")]),a._v(" "),s("h2",{attrs:{id:"第五章：深入理解pod对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第五章：深入理解pod对象"}},[a._v("#")]),a._v(" 第五章：深入理解Pod对象")]),a._v(" "),s("h3",{attrs:{id:"_5-1-pod基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-pod基本概念"}},[a._v("#")]),a._v(" 5.1 pod基本概念")]),a._v(" "),s("p",[a._v("最小部署单元；"),s("br"),a._v("\n一组容器的集合；"),s("br"),a._v("\n一个Pod中的容器共享网络命名空间；"),s("br"),a._v("\npod是短暂的")]),a._v(" "),s("h3",{attrs:{id:"_5-2-pod存在的意义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-pod存在的意义"}},[a._v("#")]),a._v(" 5.2 pod存在的意义")]),a._v(" "),s("p",[a._v("Pod为亲密性应用而存在"),s("br"),a._v("\n亲密性应用场景："),s("br"),a._v("\n两个应用之间发生文件交互"),s("br"),a._v("\n两个应用需要通过127.0.0.1或者socket通信"),s("br"),a._v("\n两个应用需要发生频繁的调用")]),a._v(" "),s("h3",{attrs:{id:"_5-3-pod实现机制与设计模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-pod实现机制与设计模式"}},[a._v("#")]),a._v(" 5.3 pod实现机制与设计模式")]),a._v(" "),s("p",[a._v("网络共享"),s("br"),a._v("\n文件共享")]),a._v(" "),s("h3",{attrs:{id:"_5-4-镜像拉取策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-镜像拉取策略"}},[a._v("#")]),a._v(" 5.4 镜像拉取策略")]),a._v(" "),s("p",[a._v("IfNotPresent"),s("br"),a._v("\nAlways"),s("br"),a._v("\nNever")]),a._v(" "),s("h3",{attrs:{id:"_5-5-资源限制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-资源限制"}},[a._v("#")]),a._v(" 5.5 资源限制")]),a._v(" "),s("h3",{attrs:{id:"_5-6-重启策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-重启策略"}},[a._v("#")]),a._v(" 5.6 重启策略")]),a._v(" "),s("p",[a._v("Always"),s("br"),a._v("\nOnFailure"),s("br"),a._v("\nNever")]),a._v(" "),s("h3",{attrs:{id:"_5-7-健康检查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-健康检查"}},[a._v("#")]),a._v(" 5.7 健康检查")]),a._v(" "),s("p",[a._v("1、容器层面"),s("br"),a._v("\nk8s只能看容器是否运行正常"),s("br"),a._v("\n例如：java堆内存溢出 running"),s("br"),a._v("\n2、应用层面"),s("br"),a._v("\ncurl http://127.0.0.1/index.html"),s("br"),a._v("\n3、readiness pointiness ?")]),a._v(" "),s("h3",{attrs:{id:"_5-8-调度策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-8-调度策略"}},[a._v("#")]),a._v(" 5.8 调度策略")]),a._v(" "),s("p",[a._v("nodeName用于将Pod调度到指定的node"),s("br"),a._v("\nnodeSelector用于将pod调度到匹配Label的Node上"),s("br"),a._v("\nkubectl label nodes 192.168.204.101 team=a"),s("br"),a._v("\nkubectl get nodes --show-labels")]),a._v(" "),s("h3",{attrs:{id:"_5-9-故障排查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-9-故障排查"}},[a._v("#")]),a._v(" 5.9 故障排查")]),a._v(" "),s("p",[a._v("Pending"),s("br"),a._v("\nRunning"),s("br"),a._v(" "),s("strong",[a._v("Succeeded")]),s("br"),a._v("\nFailed"),s("br"),a._v("\nUnknown")]),a._v(" "),s("p",[a._v("kubectl describe pod xxx"),s("br"),a._v("\nkubectl logs podsname"),s("br"),a._v("\nkubectl exec podname bash")]),a._v(" "),s("h2",{attrs:{id:"第六章：最常用的控制器deployment-无状态应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第六章：最常用的控制器deployment-无状态应用"}},[a._v("#")]),a._v(" 第六章：最常用的控制器Deployment(无状态应用)")]),a._v(" "),s("h3",{attrs:{id:"_6-1-deployment功能及应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-deployment功能及应用场景"}},[a._v("#")]),a._v(" 6.1 Deployment功能及应用场景")]),a._v(" "),s("p",[a._v("部署无状态应用"),s("br"),a._v("\n管理pod和replicaSet"),s("br"),a._v("\n具有上线部署、副本设定、滚动升级、回滚等功能"),s("br"),a._v("\n提供声明式更新，例如只更新一个新的image")]),a._v(" "),s("p",[a._v("应用场景：Web服务，微服务")]),a._v(" "),s("h3",{attrs:{id:"_6-2-使用deployment部署java应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-使用deployment部署java应用"}},[a._v("#")]),a._v(" 6.2 使用deployment部署java应用")]),a._v(" "),s("h3",{attrs:{id:"_6-3-应用升级、回滚、弹性伸缩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-应用升级、回滚、弹性伸缩"}},[a._v("#")]),a._v(" 6.3 应用升级、回滚、弹性伸缩")]),a._v(" "),s("h2",{attrs:{id:"第七章：深入理解service（统一入口访问应用）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第七章：深入理解service（统一入口访问应用）"}},[a._v("#")]),a._v(" 第七章：深入理解Service（统一入口访问应用）")]),a._v(" "),s("h3",{attrs:{id:"_7-1-service存在的意义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-service存在的意义"}},[a._v("#")]),a._v(" 7.1 Service存在的意义")]),a._v(" "),s("h3",{attrs:{id:"_7-2-pod与service的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-pod与service的关系"}},[a._v("#")]),a._v(" 7.2 Pod与service的关系")]),a._v(" "),s("p",[a._v("service 只支持四层负载均衡"),s("br"),a._v("\n四层：OSI中的传输层，TCP/UDP，四元组（源IP源端口，目标IP目标端口），只负责IP数据包转发"),s("br"),a._v("\n七层：OSI中的应用层，HTTP，ftp，snmp协议，可以拿到这些协议头部信息，那就可以实现基于协议层面的处理")]),a._v(" "),s("h3",{attrs:{id:"_7-3-service三种常用类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-service三种常用类型"}},[a._v("#")]),a._v(" 7.3 Service三种常用类型")]),a._v(" "),s("p",[a._v("ClusterIP：集群内部使用"),s("br"),a._v("\nNodePort：对外暴露应用"),s("br"),a._v("\nLoadBalance：对外暴露应用，使用公有云")]),a._v(" "),s("h4",{attrs:{id:"nodeport访问流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodeport访问流程"}},[a._v("#")]),a._v(" NodePort访问流程")]),a._v(" "),s("p",[a._v("user -> 域名（公网ip）-> node ip:port -> service(iptables)-> pod"),s("br"),a._v("\n一般生产环境node都是部署在内网，那30008这个端口怎么让互联网用户访问呢？\n1、找一台有公网IP的服务器，装一个nginx，反向代理--\x3e node ip:port"),s("br"),a._v("\n2、只用你们外部负载均衡器（nginx、lvs、haproxy）--\x3e node ip:port"),s("br"),a._v("\n上面好像要手动配置")]),a._v(" "),s("h4",{attrs:{id:"loadbalance访问流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#loadbalance访问流程"}},[a._v("#")]),a._v(" LoadBalance访问流程")]),a._v(" "),s("p",[a._v("user -> 域名（公网ip）-> 公有云上的负载均衡器（自动配置，专门控制器去完成）-> node ip:port")]),a._v(" "),s("h3",{attrs:{id:"_7-4-代理模式值iptables工作原理-默认"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-代理模式值iptables工作原理-默认"}},[a._v("#")]),a._v(" 7.4 代理模式值iptables工作原理(默认)")]),a._v(" "),s("p",[a._v("iptables-save |grep kube-xxx"),s("br"),a._v("\nkube-proxy 监听所有的iptables规则，有变化则刷新")]),a._v(" "),s("h3",{attrs:{id:"_7-5-代理模式ipvs工作原理-解决iptables不能在大规模中的应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-代理模式ipvs工作原理-解决iptables不能在大规模中的应用"}},[a._v("#")]),a._v(" 7.5 代理模式ipvs工作原理(解决iptables不能在大规模中的应用)")]),a._v(" "),s("p",[a._v("cat /opt/apps/k8s/cfg/kube-proxy")]),a._v(" "),s("p",[a._v("--proxy-mode=ipvs"),s("br"),a._v("\n--masquerade-all=true")]),a._v(" "),s("p",[a._v("当有很多项目，很多service的时候，就会创建更多的iptables规则（更新，非增量式更新）"),s("br"),a._v("\n并且iptables的匹配规则是从上到下逐条匹配（延时大）")]),a._v(" "),s("h4",{attrs:{id:"救世主-ipvs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#救世主-ipvs"}},[a._v("#")]),a._v(" 救世主 ipvs")]),a._v(" "),s("p",[a._v("Lvs 就是基于 ipvs内核调度模块实现的负载均衡")]),a._v(" "),s("p",[a._v("阿里的slb，基于lvs实现四层负载均衡（lvs只支持4层）")]),a._v(" "),s("p",[a._v("ip addr |grep kube-ipvs")]),a._v(" "),s("h3",{attrs:{id:"_7-6-iptables和ipvs小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-iptables和ipvs小结"}},[a._v("#")]),a._v(" 7.6 iptables和ipvs小结")]),a._v(" "),s("p",[s("strong",[a._v("iptables")]),s("br"),a._v("\n灵活、功能强大（可以在数据包不同阶段对包进行操作）"),s("br"),a._v("\n规则遍历匹配和更新，呈线性时延")]),a._v(" "),s("p",[s("strong",[a._v("ipvs")]),s("br"),a._v("\n工作在内核态，有更好的性能"),s("br"),a._v("\n调度算法丰富：rr, wrr, lc, wlc, ip hash...")]),a._v(" "),s("h3",{attrs:{id:"_7-7-集群内部dns服务（coredns）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-7-集群内部dns服务（coredns）"}},[a._v("#")]),a._v(" 7.7 集群内部dns服务（coredns）")]),a._v(" "),s("p",[a._v("coredns.yaml 中两次与kubelet.config 中相对应")]),a._v(" "),s("p",[a._v("cat /opt/apps/k8s/cfg/kubelet.config"),s("br"),a._v("\nclusterDNS")]),a._v(" "),s("p",[a._v("clusterDomain: cluster.local.")]),a._v(" "),s("h2",{attrs:{id:"第八章：ingress（对外暴露你的应用）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第八章：ingress（对外暴露你的应用）"}},[a._v("#")]),a._v(" 第八章：Ingress（对外暴露你的应用）")]),a._v(" "),s("h3",{attrs:{id:"_8-1-ingress为弥补nodeport不足而生"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-ingress为弥补nodeport不足而生"}},[a._v("#")]),a._v(" 8.1 ingress为弥补Nodeport不足而生")]),a._v(" "),s("p",[a._v("ingress解决了什么问题？")]),a._v(" "),s("h3",{attrs:{id:"_8-2-ingress-controller"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-ingress-controller"}},[a._v("#")]),a._v(" 8.2 ingress Controller")]),a._v(" "),s("h3",{attrs:{id:"_8-3-ingress-http"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-ingress-http"}},[a._v("#")]),a._v(" 8.3 ingress http")]),a._v(" "),s("h3",{attrs:{id:"_8-4-ingress-https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-ingress-https"}},[a._v("#")]),a._v(" 8.4 ingress https")]),a._v(" "),s("h3",{attrs:{id:"_8-5-ingress工作原理和高可用方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-ingress工作原理和高可用方案"}},[a._v("#")]),a._v(" 8.5 ingress工作原理和高可用方案")]),a._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("kubectl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it nginx-ingress-controller-xxxx "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v(" -n ingress-nginx\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" /etc/nginx/nginx.conf\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 内部一堆 lua")]),a._v("\nupstream upstream_balancer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\tserver "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.0")]),a._v(".0.1:1234"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# placeholder")]),a._v("\n\tbalancer_by_lua_block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t\ttcp_udp_balancer.balance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br")])]),s("p",[a._v("user -> lb -> ingress controller(pod) ->[service] ->pod")]),a._v(" "),s("p",[a._v("lb -> nodeport(30001,30002)")]),a._v(" "),s("p",[a._v("lb -> ingress controller(80,443)")]),a._v(" "),s("p",[a._v("解决高可用："),s("br"),a._v("\n1, 扩容副本数"),s("br"),a._v("\n提高并发能力"),s("br"),a._v("\n尽量让多个节点提供服务"),s("br"),a._v("\n2, 把控制器固定到几台节点"),s("br"),a._v("\na, daemonSet(与nodeport一样)"),s("br"),a._v("\nb, nodeselector + 污点"),s("br"),a._v("\n污点，即使加污点容忍也不会完全分配到专门几个节点")]),a._v(" "),s("h2",{attrs:{id:"第九章：volume（数据卷，持久数据卷）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第九章：volume（数据卷，持久数据卷）"}},[a._v("#")]),a._v(" 第九章：Volume（数据卷，持久数据卷）")]),a._v(" "),s("h3",{attrs:{id:"_9-1-emptydir-容器数据共享"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-emptydir-容器数据共享"}},[a._v("#")]),a._v(" 9.1 emptyDir(容器数据共享)")]),a._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[a._v("  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" data\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("emptyDir")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"_9-2-hostpath-访问宿主机数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-hostpath-访问宿主机数据"}},[a._v("#")]),a._v(" 9.2 hostPath(访问宿主机数据)")]),a._v(" "),s("p",[a._v("挂载Node文件系统上文件或者目录到pod中的容器。"),s("br"),a._v("\n应用场景：pod容器需要访问宿主机文件")]),a._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[a._v("  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" data\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("hostPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\t  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" /tmp\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" Directory\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"_9-3-nfs-网络存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-nfs-网络存储"}},[a._v("#")]),a._v(" 9.3 NFS(网络存储)")]),a._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[a._v("yum install "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("y nfs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("utils "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## server")]),a._v("\ncat  /etc/exports\n/data/nfs "),s("span",{pre:!0,attrs:{class:"token important"}},[a._v("*(rw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("no_root_squash)\n\nsystemctl start nfs\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[a._v("    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" wwwroot\n\t  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("nfs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\t    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 192.168.204.222\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" /data/nfs\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("p",[a._v("kubectl get ep")]),a._v(" "),s("h2",{attrs:{id:"第十章：项目在k8s平台部署案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第十章：项目在k8s平台部署案例"}},[a._v("#")]),a._v(" 第十章：项目在k8s平台部署案例")]),a._v(" "),s("h3",{attrs:{id:"_10-1-部署前准备工作及注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-部署前准备工作及注意事项"}},[a._v("#")]),a._v(" 10.1 部署前准备工作及注意事项")]),a._v(" "),s("p",[a._v("一、部署的项目情况"),s("br"),a._v("\n1, 业务架构及服务（dubbo, spring cloud）"),s("br"),a._v("\n2, 第三方服务，例如mysql， redis， zookeeper, eruka, mq"),s("br"),a._v("\n3, 服务之间怎么通信？"),s("br"),a._v("\n4，资源消耗：硬件资源，带宽")]),a._v(" "),s("p",[a._v("二、部署项目时用到的k8s资源"),s("br"),a._v("\n1,使用namespace进行不同项目隔离，或者隔离不同环境(test, prod, dev)"),s("br"),a._v("\n2,无状态应用(deployment)"),s("br"),a._v("\n3,有状态应用(statefulset, pv, pvc)"),s("br"),a._v("\n4,暴露外部访问(service, ingress)"),s("br"),a._v("\n5,secret, configmap")]),a._v(" "),s("p",[a._v("三、项目基础镜像")]),a._v(" "),s("p",[a._v("四、编排部署\n1, 项目构建（java），ci/cd环境这个阶段自动完成（代码拉取 - 代码编译构建 - 镜像打包 - 推送镜像仓库）")]),a._v(" "),s("p",[a._v("五、工作流程\nkubectl - yaml - 镜像仓库拉取镜像 - Service(集群内部访问)/ ingress(暴露给外部用户)")]),a._v(" "),s("h3",{attrs:{id:"_10-2-部署java项目-上"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-部署java项目-上"}},[a._v("#")]),a._v(" 10.2 部署java项目(上)")]),a._v(" "),s("p",[a._v("部署harbor"),s("br"),a._v("\ndaemon.json添加自建仓库可信任")]),a._v(" "),s("p",[a._v("创建java + maven环境"),s("br"),a._v("\nvim /etc/profile"),s("br"),a._v("\ncd $Project_dir && /usr/local/maven/bin/mvn clean package")]),a._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 创建命名空间")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 创建secret")]),a._v("\nkubectl create secret docker-registry registry-pull-secret --docker-username"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("admin --docker-password"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("Harbor12345 --docker-email"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("admin@qq.com --docker-server"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".204.61 -n "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## get 镜像")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## ")]),a._v("\nkubectl get pods, svc, ing -n "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 连接mysql")]),a._v("\njdbc:mysql://podname.serviceName.namespace:3306/test?characterEncoding"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("utf-8\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br")])]),s("h3",{attrs:{id:"_10-3-部署java项目-下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-部署java项目-下"}},[a._v("#")]),a._v(" 10.3 部署java项目(下)")]),a._v(" "),s("h3",{attrs:{id:"_10-4-部署php项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-4-部署php项目"}},[a._v("#")]),a._v(" 10.4 部署php项目")]),a._v(" "),s("h2",{attrs:{id:"第十一章：k8s集群资源监控"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第十一章：k8s集群资源监控"}},[a._v("#")]),a._v(" 第十一章：k8s集群资源监控")]),a._v(" "),s("h3",{attrs:{id:"_11-1-k8s监控指标和监控方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-k8s监控指标和监控方案"}},[a._v("#")]),a._v(" 11.1 k8s监控指标和监控方案")]),a._v(" "),s("h3",{attrs:{id:"_11-2-监控系统部署-cadvisor-influxdb-grafana"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-监控系统部署-cadvisor-influxdb-grafana"}},[a._v("#")]),a._v(" 11.2 监控系统部署(cAdvisor + InfluxDB + Grafana)")]),a._v(" "),s("h2",{attrs:{id:"第十二章：使用elk-收集k8s平台日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第十二章：使用elk-收集k8s平台日志"}},[a._v("#")]),a._v(" 第十二章：使用ELK 收集k8s平台日志")]),a._v(" "),s("h3",{attrs:{id:"_12-1-容器本身特性给收集带来的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-容器本身特性给收集带来的问题"}},[a._v("#")]),a._v(" 12.1 容器本身特性给收集带来的问题")]),a._v(" "),s("h3",{attrs:{id:"_12-2-收集哪些日志？主流日志方案有哪些？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-收集哪些日志？主流日志方案有哪些？"}},[a._v("#")]),a._v(" 12.2 收集哪些日志？主流日志方案有哪些？")]),a._v(" "),s("h3",{attrs:{id:"_12-3-容器中日志怎么收集？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-3-容器中日志怎么收集？"}},[a._v("#")]),a._v(" 12.3 容器中日志怎么收集？")]),a._v(" "),s("h3",{attrs:{id:"_12-4-部署elk-stack日志平台"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-4-部署elk-stack日志平台"}},[a._v("#")]),a._v(" 12.4 部署elk stack日志平台")]),a._v(" "),s("h3",{attrs:{id:"_12-5-收集所有容器标准输出的日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-5-收集所有容器标准输出的日志"}},[a._v("#")]),a._v(" 12.5 收集所有容器标准输出的日志")]),a._v(" "),s("h3",{attrs:{id:"_12-6-收集容器中落盘的日志文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-6-收集容器中落盘的日志文件"}},[a._v("#")]),a._v(" 12.6 收集容器中落盘的日志文件")])])}),[],!1,null,null,null);t.default=r.exports}}]);