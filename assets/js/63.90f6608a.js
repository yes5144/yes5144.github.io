(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{413:function(s,n,a){"use strict";a.r(n);var e=a(42),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"基本数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[s._v("#")]),s._v(" 基本数据类型")]),s._v(" "),a("h3",{attrs:{id:"pip-install-加速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pip-install-加速"}},[s._v("#")]),s._v(" pip install 加速")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("pip3 install ipython -i http://pypi.douban.com/simple  --trusted-host pypi.douban.com\n\npip3 install mysqlclient=1.3.14 -i http://pypi.douban.com/simple  --trusted-host pypi.douban.com\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"list-列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list-列表"}},[s._v("#")]),s._v(" list 列表")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("list1 = [1,3,4,5]\nlist1.append('k')\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"tuple-元组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tuple-元组"}},[s._v("#")]),s._v(" tuple 元组")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("t1 = (2,)\nt2 = (3,4)\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"dict-字典"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dict-字典"}},[s._v("#")]),s._v(" dict 字典")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 列表转集合(去重)\nlist1 = [6, 7, 7, 8, 8, 9]\nset(list1)\n# {6, 7, 8, 9}\n \n#两个列表转字典\nlist1 = ['key1','key2','key3']\nlist2 = ['1','2','3']\ndict(zip(list1,list2))\n# {'key1': '1', 'key2': '2', 'key3': '3'}\n \n#嵌套列表转字典\nlist3 = [['key1','value1'],['key2','value2'],['key3','value3']]\ndict(list3)\n# {'key1': 'value1', 'key2': 'value2', 'key3': 'value3'}\n \n# 列表、元组转字符串\nlist2 = ['a', 'a', 'b']\n''.join(list2)\n# 'aab'\n \ntup1 = ('a', 'a', 'b')\n''.join(tup1)\n# 'aab'\n\n## 字典排序\nprint sorted(sumNewServer.items(), key=lambda d:d[1],reverse=True)\nprint sorted(sumNewServer.items())\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("h3",{attrs:{id:"命令行传参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令行传参"}},[s._v("#")]),s._v(" 命令行传参")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('def main():\n    ops_choices = {\n        "5":["status",["review-server"]],\n    }\n\n    parser = argparse.ArgumentParser()\n    parser.add_argument("zone")\n    parser.add_argument("-k", "--key", help="project app ops", default="4")\n    args = parser.parse_args()\n    zone = args.zone\n    key = args.key\n    if args.zone:\n        project_zone_ops(zone, key)\n    else:\n        print color.inRed("Ps: python 09_restart_gs_xxx.py  nz_wx -k 4 ")\n\nif __name__ == \'__main__\':\n    main()\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("h4",{attrs:{id:"python"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python"}},[s._v("#")]),s._v(" Python")]),s._v(" "),a("h4",{attrs:{id:"控制语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控制语句"}},[s._v("#")]),s._v(" 控制语句")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("## if选择结构\nif 条件1:\n    代码1\nelif 条件2:\n    代码2\nelse:\n    代码n\n\t\t\n## while循环\nwhile 条件:\n    代码\n\n## for循环\nfor 循环变量 in 可迭代对象:\n    代码块\n\n### break, continue, pass\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h4",{attrs:{id:"字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[s._v("#")]),s._v(" 字符串")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("## 字符串输入\nnumber = int(input('input your favorite number')) # input中参数是输出提示\nprint(f'Your favorite number is {number}')    # 字符串前的f表示这是一个格式串，变量不存在则报错。\n\n## 字符串运算\nalice = 'my name is '\nbob = 'Li Hua'\n\nalice +bob\nbob * 3\n'Li' in bob\nalice[0:5]\n\n### 字符串操作符： + * in  not in  []\n\n### 字符串内建方法\ncount(), find(), isalpha(), isdigit(), join(), lstrip(), replace(), rstrip(), split(), startswith(), strip(), zfill()\n\nprint('-'.join(['3'.'2','5','5']))\nindex=33\nprint('image'+ str(index).zfill(4))\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("h4",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")])]),s._v(" "),a("h4",{attrs:{id:"变量和数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量和数据类型"}},[s._v("#")]),s._v(" 变量和数据类型")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("## Tuple（元组）\n(3,3,2,1)\n## Set（集合）\n{3,2,1}\n## List（列表）\n[3,3,2.1]\n## Dict（字典）\nkey:value\n## 字符串\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h4",{attrs:{id:"函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[s._v("#")]),s._v(" 函数")]),s._v(" "),a("ul",[a("li",[s._v("不带默认值参数：def func(a):")]),s._v(" "),a("li",[s._v("带默认值参数：def func(a, b=1):")]),s._v(" "),a("li",[s._v("任意位置参数：def func(a, b=1, *c):")]),s._v(" "),a("li",[s._v("任意键值参数：def func(a, b=1, *c, **d):")])]),s._v(" "),a("p",[s._v("这也是他们的出场顺序安排")]),s._v(" "),a("h4",{attrs:{id:"类和对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类和对象"}},[s._v("#")]),s._v(" 类和对象")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("对象是类的一个实例。\n类在python中由3部分组成--类名、属性和方法。\n类的属性分两种，分别是类属性和实例属性\n\nclass Vehicle:\n\t class_property =0   # 没有self，并且写在方法外，这是类属性\n\t \n\t def __init__(self):\n        temporary_var = -1    # 写在方法里，但是没有self，这是一个局部变量\n        self.instance_property = 1  # 有self，这里创建了一个实例属性\n        Vehicle.class_property +1   # 操作类属性需要写类名\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h3",{attrs:{id:"python-生成器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python-生成器"}},[s._v("#")]),s._v(" python 生成器")]),s._v(" "),a("blockquote",[a("p",[s._v("创建生成器的一种方法是利用yield关键字，他的作用和return类似，解释器在函数中遇到yield后会立即返回响应的值。但是yield跟return的最大的不同是，在下次调用这个函数的时候不会从头开始执行，而是会从上次yield返回后的下一句开始执行，并且这时候函数的上下文，简单来说就是各变量的值，也是和上次yield返回的时候是一致的。\n形象的说，普通使用return的函数每次执行就像是一条线段，从一个端点到另一个端点，但是使用了yield的函数每次执行更像是一个圆，从一个起点开始在固定位置返回后继续绕圈执行。同时关键的一点事，任何使用yield的函数返回值就会成为一个生成器对象。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("def  my_range(end):\n    i = 0\n    while i < end:\n        yield i   ## 这里返回 i\n        i += 1\n\n## print 函数返回对象的类型：\ng = my_range(10)\nprint(type(g))\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h4",{attrs:{id:"生成器推导式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成器推导式"}},[s._v("#")]),s._v(" 生成器推导式")]),s._v(" "),a("blockquote",[a("p",[s._v("你知道列表推导式吗？其实生成器推导式与列表推导式很相近，只是把中括号变成小括号：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("gen = (x * x for x in range(5) if x % 2 ==0)\nprint (type(gen))\nfor i in gen:\n  print(i)\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);